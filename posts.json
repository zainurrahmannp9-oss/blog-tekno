[
  {
    "id": 1,
    "title": "Harapan Mata Kuliah Basis Data Kedepannya",
    "content": "Sebagai seorang mahasiswa, saya berharap mata kuliah Database bisa memberikan pemahaman yang nyata tentang bagaimana data disusun dan digunakan dalam sistem dunia nyata...",
    "image": "https://bitlaunch.io/blog/content/images/2023/08/gaming-server.jpg",
    "date": "2025-09-29",
    "watermark": "Nzy_Zack"
  },
  {
    "id": 2,
    "title": "Apa Itu Basis Data?",
    "content": "Database adalah kumpulan data terstruktur yang tersimpan dalam sistem komputer. Data ini bisa diakses, dikelola, dan dimanipulasi dengan mudah menggunakan perangkat lunak khusus bernama Database Management System (DBMS)...",
    "image": "https://cdn.servermania.com/images/w_750,h_300,c_scale/f_webp,q_auto:best/v1681845907/blog/What-is-a-Game-Server-4/What-is-a-Game-Server-4.jpg",
    "date": "2025--09-29",
    "watermark": "Nzy_Zack"
  },
  {
    "id": 3,
    "title": "Apa Itu Conceptual Model?",
    "content": "Conceptual Model adalah tahap paling awal di mana kita menentukan data apa saja yang penting (entitas) dan bagaimana data itu saling berhubungan (relasi)...",
    "image": "https://www.easypc.io/wp-content/uploads/2023/12/img/game-hosts/cost/mmo-server.jpg",
    "date": "2025-09-29",
    "watermark": "Nzy_Zack"
  },
  {
    "id": 4,
    "title": "Apa itu Physical Model",
    "content": "Physical Model menjelaskan tabel fisik, tipe data, index, struktur file, hingga cara data diakses oleh sistem. Dengan kata lain, ini blueprint teknis yang menjadikan rancangan konseptual bisa benar-benar berjalan di sistem nyata...",
    "image": "https://computory.com/wp-content/uploads/2020/06/cpu-gaming-terbaik-2020.jpg",
    "date": "2025-09-29",
    "watermark": "Nzy_Zack"
  },
  {"id": 5,
    "title": "Tata Cara Installasi DBMS dan MySQL menggunakan Laragon",
    "content": "<p>Link Video Tutorial: <a href='https://youtu.be/NKLUGB22DT0' target='_blank'>https://youtu.be/NKLUGB22DT0</a></p><p>Dalam model ERD (Entity Relationship Diagram), entitas mewakili objek nyata atau konsep seperti mahasiswa, buku, atau produk, yang memiliki atribut sebagai ciri khasnya (misalnya ID, nama, alamat) dengan satu atribut utama sebagai primary key. Relasi menggambarkan hubungan antar entitas, seperti 1:1, 1:N, atau M:N, dan dapat memiliki atribut sendiri bila hubungan tersebut perlu dicatat dalam basis data...</p>...",
    "image": "https://www.club386.com/wp-content/uploads/2022/10/msi-4090-feature-696x447.jpg",
    "date": "2025-10-06",
    "watermark": "Nzy_Zack"
  },
  {"id": 6,
    "title": "Apa Itu Attribute, Entitas, dan Relasi dalam ERD?",
    "content": "Dalam model ERD, entitas merepresentasikan objek nyata atau konsep relevan dalam basis data dan digambarkan sebagai persegi panjang. Setiap entitas memiliki atribut (elips) untuk menjelaskan cirinya, dengan satu atribut sebagai primary key. Relasi (belah ketupat) menunjukkan hubungan antar entitas, seperti 1:1, 1:N, atau M:N, dan dapat memiliki atribut sendiri. ERD digunakan untuk merancang struktur basis data konseptual agar entitas, atribut, dan relasi tersusun logis sebelum diterapkan secara fisik...",
    "image": "https://www.club386.com/wp-content/uploads/2022/10/msi-4090-feature-696x447.jpg",
    "date": "2025-10-06",
    "watermark": "Nzy_Zack"
  },
  {
  "id": 7,
  "title": "Apa Itu Primary Key, Foreign Key, dan Candidate Key?",
  "content": "<h2>Apa Itu Primary Key?</h2><p>Dalam konsep ERD dan basis data relasional, <b>Primary Key</b> adalah sebuah kolom atau kombinasi kolom yang digunakan untuk mengidentifikasi setiap baris data secara unik dalam sebuah tabel. Primary Key tidak boleh memiliki nilai yang sama antar baris dan tidak boleh bernilai NULL.</p><h3>Sifat-sifat Primary Key:</h3><ul><li>Nilainya harus <b>unik</b> untuk setiap baris.</li><li>Tidak boleh bernilai <b>NULL</b>.</li><li>Hanya ada <b>satu Primary Key</b> di setiap tabel.</li></ul><h3>Contoh Primary Key pada Tabel Mahasiswa:</h3><table border='1' cellspacing='0' cellpadding='5'><tr><th>NIM</th><th>Nama_Lengkap</th><th>Jurusan</th></tr><tr><td>24416255201040</td><td>Zainurrahman Nanda Prasetyanta</td><td>Teknik Informatika</td></tr><tr><td>24416255201024</td><td>Satria Nugraha</td><td>Sistem Informasi</td></tr></table><p><i>Penjelasan:</i> NIM digunakan sebagai Primary Key karena setiap mahasiswa memiliki NIM yang unik dan tidak boleh kosong.</p><h3>Contoh Primary Key pada Tabel Barang:</h3><table border='1' cellspacing='0' cellpadding='5'><tr><th>Kode_Barang</th><th>Nama_Barang</th><th>Harga</th><th>Stok</th></tr><tr><td>BRG001</td><td>Keyboard Gaming</td><td>Rp. 150.000</td><td>12</td></tr><tr><td>BRG002</td><td>Monitor 24 Inch</td><td>Rp. 2.100.000</td><td>5</td></tr></table><p><i>Penjelasan:</i> Kolom Kode_Barang digunakan sebagai Primary Key karena setiap barang memiliki kode unik dan tidak boleh sama.</p><hr><h2>Apa Itu Foreign Key?</h2><p><b>Foreign Key</b> adalah sebuah kolom dalam suatu tabel yang menunjuk ke Primary Key di tabel lain. Fungsinya untuk menghubungkan antar tabel dan menjaga integritas data antar tabel tersebut.</p><h3>Sifat-sifat Foreign Key:</h3><ul><li>Digunakan untuk menjaga <b>hubungan antar tabel</b>.</li><li>Nilainya harus sesuai dengan nilai Primary Key di tabel referensi.</li><li>Dapat bernilai <b>NULL</b> jika hubungan tidak wajib.</li></ul><h3>Contoh Foreign Key pada Tabel Mahasiswa & Dosen:</h3><table border='1' cellspacing='0' cellpadding='5'><tr><th>NIM</th><th>Nama_Mahasiswa</th><th>NIDN_Pembimbing (FK)</th></tr><tr><td>24416255201023</td><td>Bagas Nurdiansyah</td><td>041080801</td></tr><tr><td>24416255201024</td><td>Satria Nugraha</td><td>041090902</td></tr></table><p><i>Penjelasan:</i> Kolom <b>NIDN_Pembimbing</b> pada tabel Mahasiswa adalah Foreign Key yang mengacu ke kolom <b>NIDN</b> di tabel Dosen. Ini menunjukkan dosen mana yang menjadi pembimbing mahasiswa tersebut.</p><h3>Contoh Foreign Key pada Tabel Pesanan & Pelanggan:</h3><table border='1' cellspacing='0' cellpadding='5'><tr><th>ID_Pesanan</th><th>Tgl_Pesanan</th><th>ID_Pelanggan (FK)</th></tr><tr><td>PSN01</td><td>2025-09-10</td><td>PLG001</td></tr><tr><td>PSN02</td><td>2025-09-11</td><td>PLG002</td></tr></table><p><i>Penjelasan:</i> Kolom <b>ID_Pelanggan</b> di tabel Pesanan menjadi Foreign Key yang menunjuk ke tabel Pelanggan untuk menunjukkan siapa pelanggan yang melakukan pesanan tersebut.</p><hr><h2>Apa Itu Candidate Key?</h2><p><b>Candidate Key</b> adalah satu atau beberapa kolom yang nilainya unik dan bisa digunakan untuk mengidentifikasi setiap baris data dalam tabel. Semua Candidate Key berpotensi untuk dijadikan Primary Key, namun hanya satu yang dipilih sebagai Primary Key. Sisanya disebut <b>Alternate Key</b>.</p><h3>Sifat-sifat Candidate Key:</h3><ul><li>Nilainya harus <b>unik</b>.</li><li>Tidak boleh bernilai <b>NULL</b>.</li><li>Tidak memiliki atribut tambahan lain yang tidak diperlukan untuk keunikan data.</li></ul><h3>Contoh Candidate Key pada Tabel Mahasiswa:</h3><table border='1' cellspacing='0' cellpadding='5'><tr><th>NIM</th><th>Email_Kampus</th><th>No_KTP</th><th>Nama_Lengkap</th></tr><tr><td>24416255201023</td><td>if24.bagas@mhs.ubp.ac.id</td><td>321509xxxx0001</td><td>Bagas Nurdiansyah</td></tr><tr><td>24416255201024</td><td>satria24@mhs.ubp.ac.id</td><td>321509xxxx0002</td><td>Satria Nugraha</td></tr></table><p><i>Penjelasan:</i> Pada tabel di atas, kolom <b>NIM</b>, <b>Email_Kampus</b>, dan <b>No_KTP</b> semuanya adalah Candidate Key karena nilainya unik. Namun, hanya NIM yang ditetapkan sebagai Primary Key.</p><hr><p><b>Kesimpulan:</b><br>- <b>Primary Key</b> digunakan untuk mengidentifikasi setiap baris data secara unik.<br>- <b>Foreign Key</b> digunakan untuk menghubungkan antar tabel.<br>- <b>Candidate Key</b> adalah kolom yang memiliki potensi untuk dijadikan Primary Key.</p>",
  "image": "https://voguisher.com/wp-content/uploads/2025/08/game-menggambar-ai-revolusi.jpg.png",
  "date": "2025-10-12",
  "watermark": "Nzy_Zack"
},
{
  "id": 8,
  "title": "Relation pada ERD dan Alasan Many-to-Many Tidak Disarankan",
  "content": "<h2>Pengertian Relation pada ERD</h2><p>Dalam <b>Entity Relationship Diagram (ERD)</b>, <i>relation</i> atau relasi menggambarkan hubungan logis antara dua atau lebih entitas di dalam sistem basis data. Relasi ini menjelaskan bagaimana data dalam satu entitas berhubungan dengan data pada entitas lainnya. Setiap relasi memiliki arah dan derajat hubungan (cardinality) tertentu yang menentukan jumlah keterlibatan antar entitas.</p><h3>Jenis-jenis Relasi pada ERD</h3><ul><li><b>One to One (1:1)</b> – Satu entitas hanya berhubungan dengan satu entitas lainnya.<br>Contoh: Setiap dosen memiliki satu ruang kerja pribadi.</li><li><b>One to Many (1:N)</b> – Satu entitas dapat berhubungan dengan banyak entitas lainnya.<br>Contoh: Satu dosen dapat membimbing banyak mahasiswa.</li><li><b>Many to Many (M:N)</b> – Banyak entitas dari tabel A dapat berhubungan dengan banyak entitas dari tabel B.<br>Contoh: Banyak mahasiswa dapat mengambil banyak mata kuliah.</li></ul><hr><h2>Contoh Relasi pada Tabel Mahasiswa dan Dosen</h2><p>Pada contoh di bawah ini, terdapat dua tabel yaitu <b>Mahasiswa</b> dan <b>Dosen</b>. Hubungan antara keduanya adalah <b>One to Many (1:N)</b> karena satu dosen dapat membimbing beberapa mahasiswa, namun satu mahasiswa hanya memiliki satu dosen pembimbing.</p><table border='1' cellspacing='0' cellpadding='6'><tr><th colspan='3'>Tabel Dosen (Tabel Induk)</th></tr><tr><th>NIDN</th><th>Nama_Dosen</th><th>Jabatan</th></tr><tr><td>DSN001</td><td>Dr. Rina Suryani</td><td>Dosen Pembimbing</td></tr><tr><td>DSN002</td><td>Ir. Ahmad Fadli, M.Kom</td><td>Dosen Pembimbing</td></tr></table><br><table border='1' cellspacing='0' cellpadding='6'><tr><th colspan='4'>Tabel Mahasiswa (Tabel Anak)</th></tr><tr><th>NIM</th><th>Nama_Mahasiswa</th><th>Jurusan</th><th>NIDN_Pembimbing (FK)</th></tr><tr><td>24416255201023</td><td>Bagas Nurdiansyah</td><td>Teknik Informatika</td><td>DSN001</td></tr><tr><td>24416255201024</td><td>Dewi Anggraini</td><td>Teknik Informatika</td><td>DSN001</td></tr><tr><td>24416255201025</td><td>Andi Wijaya</td><td>Sistem Informasi</td><td>DSN002</td></tr></table><p><i>Penjelasan:</i> Kolom <b>NIDN_Pembimbing</b> pada tabel Mahasiswa adalah <b>Foreign Key</b> yang mengacu pada kolom <b>NIDN</b> di tabel Dosen. Relasi ini menunjukkan hubungan One-to-Many antara Dosen dan Mahasiswa.</p><hr><h2>Mengapa Many-to-Many Tidak Baik Digunakan</h2><p>Relasi <b>Many-to-Many (M:N)</b> seringkali dihindari dalam implementasi basis data relasional karena dapat menyebabkan kerumitan dalam penyimpanan dan pengelolaan data. Beberapa alasannya antara lain:</p><ol><li><b>Redundansi Data:</b> Data yang sama bisa muncul berulang kali di banyak tempat, sehingga menyulitkan pemeliharaan.</li><li><b>Kesulitan Implementasi:</b> Sistem basis data seperti MySQL tidak dapat langsung merepresentasikan relasi M:N tanpa menggunakan tabel tambahan.</li><li><b>Integritas Data:</b> Relasi M:N rawan menyebabkan data tidak konsisten (misalnya jika salah satu data induk dihapus).</li></ol><p>Oleh karena itu, relasi M:N biasanya dipecah menjadi dua relasi <b>One-to-Many</b> dengan bantuan tabel penghubung yang disebut <b>Junction Table</b>.</p><hr><h3>Contoh Many-to-Many pada Mahasiswa dan Mata Kuliah</h3><p>Misalkan seorang mahasiswa bisa mengambil banyak mata kuliah, dan setiap mata kuliah juga diikuti oleh banyak mahasiswa. Relasi seperti ini bersifat <b>Many-to-Many</b> dan harus dijembatani oleh tabel <b>KRS</b> (Kartu Rencana Studi).</p><table border='1' cellspacing='0' cellpadding='6'><tr><th colspan='2'>Tabel Mahasiswa</th></tr><tr><th>NIM</th><th>Nama_Mahasiswa</th></tr><tr><td>24416255201023</td><td>Bagas Nurdiansyah</td></tr><tr><td>24416255201024</td><td>Dewi Anggraini</td></tr></table><br><table border='1' cellspacing='0' cellpadding='6'><tr><th colspan='2'>Tabel Mata_Kuliah</th></tr><tr><th>Kode_MK</th><th>Nama_MK</th></tr><tr><td>MK001</td><td>Basis Data</td></tr><tr><td>MK002</td><td>Pemrograman Web</td></tr></table><br><table border='1' cellspacing='0' cellpadding='6'><tr><th colspan='2'>Tabel KRS (Junction Table)</th></tr><tr><th>NIM (FK)</th><th>Kode_MK (FK)</th></tr><tr><td>24416255201023</td><td>MK001</td></tr><tr><td>24416255201023</td><td>MK002</td></tr><tr><td>24416255201024</td><td>MK001</td></tr></table><p><i>Penjelasan:</i> Dengan adanya tabel <b>KRS</b>, hubungan antara Mahasiswa dan Mata Kuliah diubah dari Many-to-Many menjadi dua relasi One-to-Many, yaitu Mahasiswa → KRS dan Mata_Kuliah → KRS. Dengan cara ini, data menjadi lebih terstruktur, mudah diolah, dan efisien.</p><hr><h3>Kesimpulan</h3><ul><li><b>Relation</b> pada ERD menggambarkan hubungan antar entitas.</li><li><b>Many-to-Many</b> tidak efisien karena menyebabkan redundansi dan sulit diimplementasikan secara langsung.</li><li>Relasi <b>Many-to-Many</b> sebaiknya dipecah menggunakan <b>Junction Table</b> agar menjadi dua relasi <b>One-to-Many</b>.</li></ul><p>Dengan memahami jenis-jenis relasi ini, perancangan database menjadi lebih efisien, terstruktur, dan mudah dikelola.</p>",
  "image": "https://epaouydin3q.exactdn.com/wp-content/uploads/2024/11/Using-no-code-platforms-to-create-AI-driven-role-playing-scenarios.jpg?strip=all&lossy=1&ssl=1&fit=866,494.jpg",
  "date": "2025-10-12",
  "watermark": "Nzy_Zack"
},
{
  "id": 9,
  "title": "Apa Itu Normalisasi Pada ERD",
  "content": "<h2>Apa Itu Normalisasi Pada ERD</h2><p><b>Normalisasi</b> pada <i>Entity Relationship Diagram (ERD)</i> merupakan suatu proses sistematis untuk mengorganisasi struktur data dalam basis data agar menjadi lebih efisien, konsisten, dan bebas dari duplikasi. Tujuan utama dari normalisasi adalah mengurangi redundansi data serta meningkatkan integritas data, sehingga setiap informasi disimpan hanya pada satu tempat yang tepat.</p><p>Dalam konteks ERD, normalisasi dilakukan dengan cara memecah entitas yang memiliki atribut ganda, berulang, atau tidak terstruktur dengan baik menjadi beberapa entitas yang lebih kecil dan saling berhubungan melalui <b>primary key</b> dan <b>foreign key</b>. Dengan demikian, hubungan antar data menjadi lebih logis dan mudah dipelihara.</p><h3>⚙️ Tahapan Normalisasi</h3><ul><li><b>First Normal Form (1NF)</b><br>Pada tahap ini, setiap atribut dalam tabel harus memiliki nilai yang atomik (tidak dapat dipecah lagi). Artinya, tidak boleh ada kolom yang berisi daftar nilai atau data yang berulang dalam satu baris.</li><li><b>Second Normal Form (2NF)</b><br>Suatu tabel dikatakan memenuhi 2NF apabila sudah memenuhi 1NF dan setiap atribut non-kunci bergantung sepenuhnya pada primary key, bukan hanya sebagian dari kunci gabungan. Tujuannya untuk menghindari ketergantungan parsial.</li><li><b>Third Normal Form (3NF)</b><br>Tabel memenuhi 3NF jika telah memenuhi 2NF dan tidak terdapat ketergantungan transitif, yaitu ketika atribut non-kunci bergantung pada atribut non-kunci lainnya. Dengan memisahkan atribut tersebut ke tabel tersendiri, data menjadi lebih efisien dan mudah diperbarui.</li></ul>",
  "image": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXFfYj_x06u_O6Kij1bcn0tMAxlx02NQ7dhg&s.png",
  "date": "2025-10-20",
  "watermark": "Nzy_Zack"
}
]
